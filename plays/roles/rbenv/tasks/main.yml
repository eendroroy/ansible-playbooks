- name: Check for previous installation
  shell: '[ -d {{ rbenv_path }} ] && [ -d {{ ruby_build_path }} ] && echo true'
  ignore_errors: true
  register: rvenv_exists

- name: Create base directory
  file: >
    path={{ rbenv_path }}
    state=directory
    group={{ deploy_user }}
    owner={{ remote_user }}
  become: true

- include: debian/dependencies.yml

- include: centos/dependencies.yml

- name: Check for {{ ruby_version }}
  shell: ls {{ rbenv_path }}/versions | grep {{ ruby_version }}
  register: check_ruby
  ignore_errors: yes

- name: Clone rbenv
  git: repo={{ rbenv_url }} dest={{ rbenv_path }} accept_hostkey=yes
  when: rvenv_exists.stdout != "true"

- name: Clone ruby-build
  git: repo={{ ruby_build_url }} dest={{ ruby_build_path }}
  when: rvenv_exists.stdout != "true"

- name: Add rbenv to PATH
  template:
    src: rbenv.sh.j2
    dest: /etc/profile.d/rbenv.sh
    mode: a+x
  become: true

- name: Install ruby {{ ruby_version }}
  shell: >
    RUBY_CONFIGURE_OPTS=--disable-install-doc
    {{ rbenv_path }}/bin/rbenv install {{ ruby_version }}
  when: check_ruby.stdout != ruby_version

- name: Rehash ruby installations
  shell: '{{ rbenv_path }}/bin/rbenv rehash'
  when: check_ruby.stdout != ruby_version

- name: Set default ruby {{ ruby_version }}
  shell: '{{ rbenv_path }}/bin/rbenv global {{ ruby_version }}'
