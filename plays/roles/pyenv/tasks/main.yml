- name: Check for previous installation
  shell: '[ -d {{ pyenv_path }} ] && echo true'
  ignore_errors: true
  register: pyenv_exists

- name: Install dependencies
  apt: >
    name={{item}} 
    state=installed 
    update_cache=yes 
    cache_valid_time=3600
  with_items:
      - make
      - git
      - gcc
      - libssl-dev 
      - libreadline-dev
      - zlib1g-dev
      - build-essential
      - checkinstall
      - tk-dev
      - libbz2-dev
  become: true
  when: pyenv_exists.stdout != "true"

- name: Check for {{ python_version }}
  shell: ls {{ pyenv_path }}/versions | grep {{ python_version }}
  register: check_python
  ignore_errors: yes

- name: Clone pyenv
  git: repo={{ pyenv_url }} dest={{ pyenv_path }} accept_hostkey=yes
  when: pyenv_exists.stdout != "true"

- name: Add pyenv to PATH
  lineinfile: 
    dest: /home/{{ remote_user }}/.profile
    regexp: ^export.*pyenv/bin
    line: export PATH="$HOME/.pyenv/bin:$HOME/.pyenv/shims:$PATH"    

- name: Install pyenv shims
  lineinfile: 
    dest: /home/{{ remote_user }}/.profile
    regexp: ^eval.*pyenv init
    line: eval "$(pyenv init -)"

- name: Install python {{ python_version }}
  shell: '{{ pyenv_path }}/bin/pyenv install {{ python_version }}'
  when: check_python.stdout != python_version
  notify:
    - rehash

- name: Set default python {{ python_version }}
  shell: '{{ pyenv_path }}/bin/pyenv global {{ python_version }}'
