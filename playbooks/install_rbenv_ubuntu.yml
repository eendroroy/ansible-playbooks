---
- hosts: servers
  remote_user: vagrant
  gather_facts: no
  pre_tasks:
    - name: ''
      become: true
      shell: "lsb_release -a 2>/dev/null | grep Codename | awk '{print $2}'"
      register: release
      ignore_errors: yes
    - name: 'update apt packages list'
      apt:
        update_cache: yes
      become: true
      become_method: sudo
    - name: 'install python2 for xenial'
      become: true
      apt: name='python-simplejson' state=installed
      when: release.stdout == 'xenial'

  vars:
    remote_user: vagrant
    rbenv_url: https://github.com/sstephenson/rbenv.git
    rbenv_path: '/home/{{ remote_user }}/.rbenv'
    ruby_build_url: https://github.com/sstephenson/ruby-build.git
    ruby_build_path: '{{ rbenv_path }}/plugins/ruby-build'
    ruby_version: 2.3.3

  tasks:
    - name: 'install dependencies'
      apt: name={{item}} state=installed
      with_items:
          - git
          - gcc
          - libssl-dev 
          - libreadline-dev
          - zlib1g-dev
      become: true
      become_method: sudo
    - shell: 'ls {{ rbenv_path }}/versions | grep {{ ruby_version }}'
      register: check_ruby
      ignore_errors: yes
    - name: 'clone rbenv'
      git: repo={{ rbenv_url }} dest={{ rbenv_path }} accept_hostkey=yes
    - name: 'clone ruby-build'
      git: repo={{ ruby_build_url }} dest={{ ruby_build_path }}
    - name: 'update bashrc'
      shell: echo 'export PATH="$HOME/.rbenv/bin:$HOME/.rbenv/shims:$PATH"' \
        >> /home/{{ remote_user }}/.bash_profile && \
        echo 'which rbenv > /dev/null && eval "$(rbenv init -)"' \
        >> /home/{{ remote_user }}/.bash_profile
    - name: 'install ruby {{ ruby_version }}'
      shell: 'RUBY_CONFIGURE_OPTS=--disable-install-doc {{ rbenv_path }}/bin/rbenv install {{ ruby_version }}'
      when: check_ruby.stdout != ruby_version
    - name: 'set default ruby {{ ruby_version }}'
      shell: '{{ rbenv_path }}/bin/rbenv global {{ ruby_version }}'
