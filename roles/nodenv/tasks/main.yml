- name: Check for previous installation
  shell: '[ -d {{ nodenv_path }} ] && [ -d {{ node_build_path }} ] && echo true'
  ignore_errors: true
  register: nodenv_exists

- name: Create base directory
  file:
    path: {{ nodenv_path }}
    state: directory
    group: {{ deploy_user }}
    owner: {{ remote_user }}
  become: true
  when: nodenv_exists.stdout != "true"

- include: debian/dependencies.yml

- include: centos/dependencies.yml

- name: Check for {{ node_version }}
  shell: ls {{ nodenv_path }}/versions | grep {{ node_version }}
  register: check_node
  ignore_errors: yes

- name: Clone nodenv
  git:
    repo: {{ nodenv_url }}
    dest: {{ nodenv_path }}
    accept_hostkey: yes
  when: nodenv_exists.stdout != "true"

- name: Compile dynamic bash extension to speed up nodenv
  shell: '{{ nodenv_path }}/src/configure && make -C {{ nodenv_path }}/src'
  when: nodenv_exists.stdout != "true"

- name: Clone node-build
  git:
    repo: {{ node_build_url }}
    dest: {{ node_build_path }}
  when: nodenv_exists.stdout != "true"

- name: Add nodenv to PATH
  template:
    src: nodenv.sh.j2
    dest: /etc/profile.d/nodenv.sh
    mode: a+x
  become: true

- name: Install node {{ node_version }}
  shell: 'nodenv install {{ node_version }}'
  when: check_node.stdout != node_version
  become: true
  become_flags: "-iu {{ remote_user }}"

- name: Rehash node installations
  shell: 'nodenv rehash'
  when: check_node.stdout != node_version
  become: true
  become_flags: "-iu {{ remote_user }}"

- name: Set default node {{ node_version }}
  shell: 'nodenv global {{ node_version }}'
  become: true
  become_flags: "-iu {{ remote_user }}"
