- name: Check for previous installation
  shell: '[ -d {{ pyenv_path }} ] && echo true'
  ignore_errors: true
  register: pyenv_exists

- name: Create base directory
  file:
    path: '{{ pyenv_path }}'
    state: directory
    group: '{{ remote_user }}'
    owner: '{{ remote_user }}'
  become: true
  when: pyenv_exists.stdout != "true"

- include: dependencies/debian.yml
  when: pyenv_exists.stdout != "true" and ansible_os_family == 'Debian'

- include: dependencies/centos.yml
  when: >
    pyenv_exists.stdout != "true"
    and ( ansible_distribution == "CentOS" or ansible_distribution == "Amazon" )

- name: Check for {{ python_version }}
  shell: ls {{ pyenv_path }}/versions | grep {{ python_version }}
  register: check_python
  ignore_errors: yes

- name: Clone pyenv
  git:
    repo: '{{ pyenv_url }}'
    dest: '{{ pyenv_path }}'
    accept_hostkey: yes
  when: pyenv_exists.stdout != "true"

- name: Add pyenv to PATH
  template:
    src: pyenv.sh.j2
    dest: /etc/profile.d/pyenv.sh
    mode: a+x
  become: true

- include: install-python.yml
