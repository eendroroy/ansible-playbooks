- name: Check for previous installation
  shell: '[ -d {{ pyenv_path }} ] && echo true'
  ignore_errors: true
  register: pyenv_exists

- name: Create base directory
  file:
    path: {{ pyenv_path }}
    state: directory
    group: {{ deploy_user }}
    owner: {{ remote_user }}
  become: true
  when: pyenv_exists.stdout != "true"

- include: debian/dependencies.yml

- include: centos/dependencies.yml

- name: Check for {{ python_version }}
  shell: ls {{ pyenv_path }}/versions | grep {{ python_version }}
  register: check_python
  ignore_errors: yes

- name: Clone pyenv
  git:
    repo: {{ pyenv_url }}
    dest: {{ pyenv_path }}
    accept_hostkey: yes
  when: pyenv_exists.stdout != "true"

- name: Add pyenv to PATH
  template:
    src: pyenv.sh.j2
    dest: /etc/profile.d/pyenv.sh
    mode: a+x
  become: true

- name: Install python {{ python_version }}
  shell: 'pyenv install {{ python_version }}'
  when: check_python.stdout != python_version
  become: true
  become_flags: "-iu {{ remote_user }}"

- name: Rehash python installations
  shell: 'pyenv rehash'
  when: check_python.stdout != python_version
  become: true
  become_flags: "-iu {{ remote_user }}"

- name: Set default python {{ python_version }}
  shell: 'pyenv global {{ python_version }}'
  become: true
  become_flags: "-iu {{ remote_user }}"