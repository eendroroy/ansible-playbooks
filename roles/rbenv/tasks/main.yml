- name: Check for previous installation
  shell: '[ -d {{ rbenv_path }} ] && [ -d {{ ruby_build_path }} ] && echo true'
  ignore_errors: true
  register: rbenv_exists

- name: Create base directory
  file:
    path: {{ rbenv_path }}
    state: directory
    group: {{ deploy_user }}
    owner: {{ remote_user }}
  become: true
  when: rbenv_exists.stdout != "true"

- include: debian/dependencies.yml

- include: centos/dependencies.yml

- name: Check for {{ ruby_version }}
  shell: ls {{ rbenv_path }}/versions | grep {{ ruby_version }}
  register: check_ruby
  ignore_errors: yes

- name: Clone rbenv
  git:
    repo: {{ rbenv_url }}
    dest: {{ rbenv_path }}
    accept_hostkey: yes
  when: rbenv_exists.stdout != "true"

- name: Compile dynamic bash extension to speed up rbenv
  shell: '{{ rbenv_path }}/src/configure && make -C {{ rbenv_path }}/src'
  when: rbenv_exists.stdout != "true"

- name: Clone ruby-build
  git:
    repo: {{ ruby_build_url }}
    dest: {{ ruby_build_path }}
  when: rbenv_exists.stdout != "true"

- name: Add rbenv to PATH
  template:
    src: rbenv.sh.j2
    dest: /etc/profile.d/rbenv.sh
    owner: root
    group: root
    mode: 0775
  become: true

- name: Install ruby {{ ruby_version }}
  shell: 'rbenv install {{ ruby_version }}'
  when: check_ruby.stdout != ruby_version
  become: true
  become_flags: "-iu {{ remote_user }}"

- name: Rehash ruby installations
  shell: 'rbenv rehash'
  when: check_ruby.stdout != ruby_version
  become: true
  become_flags: "-iu {{ remote_user }}"

- name: Set default ruby {{ ruby_version }}
  shell: 'rbenv global {{ ruby_version }}'
  become: true
  become_flags: "-iu {{ remote_user }}"
